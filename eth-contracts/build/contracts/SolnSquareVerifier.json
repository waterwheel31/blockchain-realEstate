{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        },
        {
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "a",
          "type": "uint256[2]"
        },
        {
          "name": "b",
          "type": "uint256[2][2]"
        },
        {
          "name": "c",
          "type": "uint256[2]"
        },
        {
          "name": "input",
          "type": "uint256[2]"
        }
      ],
      "name": "verifyTx",
      "outputs": [
        {
          "name": "r",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "Pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "index",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "senderAddress",
          "type": "address"
        }
      ],
      "name": "SolutionAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "s",
          "type": "string"
        }
      ],
      "name": "Verified",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "oldOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOnwer",
          "type": "address"
        }
      ],
      "name": "TransferOwnership",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "a",
          "type": "uint256[2]"
        },
        {
          "name": "b",
          "type": "uint256[2][2]"
        },
        {
          "name": "c",
          "type": "uint256[2]"
        },
        {
          "name": "inputs",
          "type": "uint256[2]"
        }
      ],
      "name": "addSolution",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "getArrLength",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_myid\",\"type\":\"bytes32\"},{\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getArrLength\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_myid\",\"type\":\"bytes32\"},{\"name\":\"_result\",\"type\":\"string\"},{\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256[2]\"},{\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"name\":\"c\",\"type\":\"uint256[2]\"},{\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"verifyTx\",\"outputs\":[{\"name\":\"r\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"Pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256[2]\"},{\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"name\":\"c\",\"type\":\"uint256[2]\"},{\"name\":\"inputs\",\"type\":\"uint256[2]\"}],\"name\":\"addSolution\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"index\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"senderAddress\",\"type\":\"address\"}],\"name\":\"SolutionAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"s\",\"type\":\"string\"}],\"name\":\"Verified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOnwer\",\"type\":\"address\"}],\"name\":\"TransferOwnership\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/livel/Dropbox/coding/udacity/blockchain/realEstate/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/livel/Dropbox/coding/udacity/blockchain/realEstate/Blockchain-Capstone/eth-contracts/contracts/ERC721Mintable.sol\":{\"keccak256\":\"0xf3b17155ad0c8384d807540b4414b72bf6772a948997952f94cebff1e54bd076\",\"urls\":[\"bzzr://9f60b4eeaf7d3e9b57202910c941dfa9278303deac8aea53d0e75a84a13cfaa5\"]},\"/C/Users/livel/Dropbox/coding/udacity/blockchain/realEstate/Blockchain-Capstone/eth-contracts/contracts/Oraclize.sol\":{\"keccak256\":\"0xe5ebe286b4624095629f76c6ac8dbad3cb305fbdb43fff09e4eebed35a05b49c\",\"urls\":[\"bzzr://f48ebdff8df1cabbd7749c5eb818a6c54a6ba92956a850736bdcfbc9f53f9ffd\"]},\"/C/Users/livel/Dropbox/coding/udacity/blockchain/realEstate/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0xdbbca57fe24b985a426bc9e6e14eb25cb4435a662ab23029b76059aaddc3246c\",\"urls\":[\"bzzr://e30768cd3ceebaa0d5d69968cb6a08d707473a0a2ec8f41f374a923c751a2188\"]},\"/C/Users/livel/Dropbox/coding/udacity/blockchain/realEstate/Blockchain-Capstone/eth-contracts/contracts/verifier.sol\":{\"keccak256\":\"0x6c64d6ad912f1157a016ad8617ea3a2e749a34e7e0046dcb785522dc3b3c6244\",\"urls\":[\"bzzr://36c85a6da7b37c1fd667a8ac42309fcc006f377b8337c1953414cb0e789aaf26\"]},\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0xf1267d23aae72ba9bef7bbef542a658645e1e2a125d107978a0907f6693d43a1\",\"urls\":[\"bzzr://da1a56c4891c4d01514d16a3d5535ca00ba5754ea23a5b9f59be788b8e99ce92\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzzr://292843005e754e752644f767477ec5ad7a1ffc91ddb18c38b8079c62f3993cad\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzzr://2f8b9c142d30b43eab7b77dbcc632a51987eeb62371777d765e9311c0b3c4c13\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x70df50e240407aa50915ad14f61b1a901fa335b37de20955b99ed647be756af0\",\"urls\":[\"bzzr://cd04ca8d050befdf06ac93c2f6f5ea7250d2199b44aecbe54ded512e823f711a\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "301:2072:3:-;;;2133:101;8:9:-1;5:2;;;30:1;27;20:12;5:2;2133:101:3;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2133:101:3;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;2133:101:3;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;2133:101:3;;;;;;2211:4;2217:6;22276:4:0;22282:6;19958:284;;;;;;;;;;;;;;;;;963:10;954:6;;:19;;;;;;;;;;;;;;;;;;1018:6;;;;;;;;;;;988:37;;1014:1;988:37;;;;;;;;;;;;2181:5;2171:7;;:15;;;;;;;;;;;;;;;;;;2974:40;2571:10;2993:20;;2974:18;;;:40;;:::i;:::-;5118;4992:10;5137:20;;5118:18;;;:40;;:::i;:::-;12663:51;12269:10;12682:31;;12663:18;;;:51;;:::i;:::-;20107:4;20099:5;:12;;;;;;;;;;;;:::i;:::-;;20131:6;20121:7;:16;;;;;;;;;;;;:::i;:::-;;20163:12;20147:13;:28;;;;;;;;;;;;:::i;:::-;;20186:49;19769:10;20205:29;;20186:18;;;:49;;:::i;:::-;19958:284;;;22203:163;;2133:101:3;;301:2072;;3324:158:0;3414:10;3399:25;;:11;:25;;;;;3391:34;;;;;;3471:4;3435:20;:33;3456:11;3435:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;3324:158;:::o;301:2072:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "301:2072:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;301:2072:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20330:163:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;20330:163:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;20330:163:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3112:133;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3112:133:0;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6295:200;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6295:200:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5873:416;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5873:416:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;13428:94;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7517:217;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7517:217:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14801:122:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14801:122:2;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14801:122:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14801:122:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14801:122:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14801:122:2;;;;;;;;;;;;;;;:::i;:::-;;2240:130:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;13094:182:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13094:182:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14929:166:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14929:166:2;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14929:166:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14929:166:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14929:166:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14929:166:2;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14929:166:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14929:166:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14929:166:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14929:166:2;;;;;;;;;;;;;;;:::i;:::-;;1663:464:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1663:464:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7740:132:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7740:132:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;20499:167;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;20499:167:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;20499:167:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13859:148;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13859:148:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;23963:732:4;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;23963:732:4;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;23963:732:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;23963:732:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;23963:732:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;23963:732:4;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5523:277:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5523:277:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2427:70;;;:::i;:::-;;5171:346;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5171:346:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1517:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6795:250;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6795:250:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7878:267;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7878:267:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7878:267:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7878:267:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7878:267:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7878:267:0;;;;;;;;;;;;;;;:::i;:::-;;20672:182;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;20672:182:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;20672:182:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7366:145;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7366:145:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1155:356;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1155:356:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;934:638:3;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;934:638:3;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;934:638:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;934:638:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;934:638:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;934:638:3;;;;;;;;;;;;;;:::i;:::-;;20330:163:0;20384:13;20416:16;20424:7;20416;:16::i;:::-;20408:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20481:5;20474:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20330:163;;;:::o;3112:133::-;3182:4;3205:20;:33;3226:11;3205:33;;;;;;;;;;;;;;;;;;;;;;;;;;;3198:40;;3112:133;;;:::o;6295:200::-;6354:7;6381:16;6389:7;6381;:16::i;:::-;6373:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6464:15;:24;6480:7;6464:24;;;;;;;;;;;;;;;;;;;;;6457:31;;6295:200;;;:::o;5873:416::-;5941:13;5957:16;5965:7;5957;:16::i;:::-;5941:32;;5997:5;5991:11;;:2;:11;;;;5983:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6073:5;6059:19;;:10;:19;;;:58;;;;6082:35;6099:5;6106:10;6082:16;:35::i;:::-;6059:58;6051:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6237:2;6210:15;:24;6226:7;6210:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;6274:7;6270:2;6254:28;;6263:5;6254:28;;;;;;;;;;;;5873:416;;;:::o;13428:94::-;13472:7;13498:10;:17;;;;13491:24;;13428:94;:::o;7517:217::-;7607:39;7626:10;7638:7;7607:18;:39::i;:::-;7599:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7695:32;7709:4;7715:2;7719:7;7695:13;:32::i;:::-;7517:217;;;:::o;14801:122:2:-;14876:40;14887:5;14894:7;14913:1;14903:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;14903:12:2;;;;14876:10;:40::i;:::-;14801:122;;:::o;2240:130:3:-;2281:5;2305:9;2323:12;:19;;;;2305:38;;2360:3;2353:10;;;2240:130;:::o;13094:182:0:-;13174:7;13209:16;13219:5;13209:9;:16::i;:::-;13201:5;:24;13193:33;;;;;;13243:12;:19;13256:5;13243:19;;;;;;;;;;;;;;;13263:5;13243:26;;;;;;;;;;;;;;;;13236:33;;13094:182;;;;:::o;14929:166:2:-;;;;:::o;1663:464:3:-;1734:4;1828:24;;:::i;:::-;1855:9;:13;1865:2;1855:13;;;;;;;;;;;;;;;1828:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1887:8;:17;;;1886:18;1878:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1948:18;1954:2;1958:7;1948:5;:18::i;:::-;2001:4;1976:9;:13;1986:2;1976:13;;;;;;;;;;;;;;;:22;;;:29;;;;;;;;;;;;;;;;;;2078:21;2091:7;2078:12;:21::i;:::-;2116:4;2109:11;;;1663:464;;;;:::o;7740:132:0:-;7826:39;7843:4;7849:2;7853:7;7826:39;;;;;;;;;;;;:16;:39::i;:::-;7740:132;;;:::o;20499:167::-;20555:13;20587:16;20595:7;20587;:16::i;:::-;20579:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20652:7;20645:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20499:167;;;:::o;13859:148::-;13917:7;13952:13;:11;:13::i;:::-;13944:5;:21;13936:30;;;;;;13983:10;13994:5;13983:17;;;;;;;;;;;;;;;;13976:24;;13859:148;;;:::o;23963:732:4:-;24134:6;24152:18;;:::i;:::-;24190:27;;;;;;;;24206:1;24208;24206:4;;;;;;;;;;;24190:27;;;;24212:1;24214;24212:4;;;;;;;;;;;24190:27;;;24180:5;:7;;:37;;;;24237:55;;;;;;;;;;;;;;;;24254:1;24256;24254:4;;;;;;;;;;;24259:1;24254:7;;;;;;;;;;;24237:55;;;;24263:1;24265;24263:4;;;;;;;;;;;24268:1;24263:7;;;;;;;;;;;24237:55;;;;;;;;;;;;;;;24274:1;24276;24274:4;;;;;;;;;;;24279:1;24274:7;;;;;;;;;;;24237:55;;;;24283:1;24285;24283:4;;;;;;;;;;;24288:1;24283:7;;;;;;;;;;;24237:55;;;;;;24227:5;:7;;:65;;;;24312:27;;;;;;;;24328:1;24330;24328:4;;;;;;;;;;;24312:27;;;;24334:1;24336;24334:4;;;;;;;;;;;24312:27;;;24302:5;:7;;:37;;;;24349:25;24388:12;24377:24;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;24377:24:4;;;;24349:52;;24415:6;24424:1;24415:10;;24411:88;24431:12;24427:1;:16;24411:88;;;24480:5;24486:1;24480:8;;;;;;;;;;;24463:11;24475:1;24463:14;;;;;;;;;;;;;:25;;;;;24445:3;;;;;;;24411:88;;;;24542:1;24512:26;24519:11;24532:5;24512:6;:26::i;:::-;:31;24508:181;;;24564:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24631:4;24624:11;;;;;;24508:181;24673:5;24666:12;;;;23963:732;;;;;;;:::o;5523:277:0:-;5578:7;5651:13;5667:11;:20;5679:7;5667:20;;;;;;;;;;;;;;;;;;;;;5651:36;;5722:1;5705:19;;:5;:19;;;;5697:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5788:5;5781:12;;;5523:277;;;:::o;2427:70::-;1094:6;;;;;;;;;;;1082:18;;:10;:18;;;1074:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2486:4;2476:7;;:14;;;;;;;;;;;;;;;;;;2427:70::o;5171:346::-;5226:7;5433:1;5416:19;;:5;:19;;;;5408:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5476:34;:17;:24;5494:5;5476:24;;;;;;;;;;;;;;;:32;:34::i;:::-;5469:41;;5171:346;;;:::o;1517:78::-;1557:7;1582:6;;;;;;;;;;;1575:13;;1517:78;:::o;6795:250::-;6880:10;6874:16;;:2;:16;;;;6866:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6975:8;6938:18;:30;6957:10;6938:30;;;;;;;;;;;;;;;:34;6969:2;6938:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;7025:2;6998:40;;7013:10;6998:40;;;7029:8;6998:40;;;;;;;;;;;;;;;;;;;;;;6795:250;;:::o;7878:267::-;7992:39;8011:10;8023:7;7992:18;:39::i;:::-;7984:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8095:43;8113:4;8119:2;8123:7;8132:5;8095:17;:43::i;:::-;7878:267;;;;:::o;20672:182::-;20730:13;20763:16;20771:7;20763;:16::i;:::-;20755:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20828:10;:19;20839:7;20828:19;;;;;;;;;;;20821:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20672:182;;;:::o;7366:145::-;7446:4;7469:18;:25;7488:5;7469:25;;;;;;;;;;;;;;;:35;7495:8;7469:35;;;;;;;;;;;;;;;;;;;;;;;;;7462:42;;7366:145;;;;:::o;1155:356::-;1094:6;;;;;;;;;;;1082:18;;:10;:18;;;1074:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1400:1;1380:22;;:8;:22;;;;1371:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1445:8;1436:6;;:17;;;;;;;;;;;;;;;;;;1494:8;1468:35;;1486:6;;;;;;;;;;;1468:35;;;;;;;;;;;;1155:356;:::o;934:638:3:-;1097:12;1112:22;1121:1;1123;1125;1127:6;1112:8;:22::i;:::-;1097:37;;1152:7;1144:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1200:20;1250:1;1252;1254;1256:6;1233:30;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1233:30:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1233:30:3;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1233:30:3;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1233:30:3;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1233:30:3;;;1223:41;;;;;;1200:64;;1275:24;;:::i;:::-;1302:128;;;;;;;;1337:12;1302:128;;;;1379:10;1302:128;;;;;;1414:5;1302:128;;;;;1275:155;;1465:8;1441:9;:21;1451:10;1441:21;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1483:12;1501:8;1483:27;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1483:27:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1525:40;1540:12;1554:10;1525:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;934:638;;;;;;;:::o;8614:152:0:-;8671:4;8687:13;8703:11;:20;8715:7;8703:20;;;;;;;;;;;;;;;;;;;;;8687:36;;8757:1;8740:19;;:5;:19;;;;8733:26;;;8614:152;;;:::o;9126:329::-;9211:4;9235:16;9243:7;9235;:16::i;:::-;9227:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9310:13;9326:16;9334:7;9326;:16::i;:::-;9310:32;;9371:5;9360:16;;:7;:16;;;:51;;;;9404:7;9380:31;;:20;9392:7;9380:11;:20::i;:::-;:31;;;9360:51;:87;;;;9415:32;9432:5;9439:7;9415:16;:32::i;:::-;9360:87;9352:96;;;9126:329;;;;:::o;14382:239::-;14467:38;14487:4;14493:2;14497:7;14467:19;:38::i;:::-;14516:47;14549:4;14555:7;14516:32;:47::i;:::-;14574:40;14602:2;14606:7;14574:27;:40::i;:::-;14382:239;;;:::o;14876:196::-;14939:24;14951:2;14955:7;14939:11;:24::i;:::-;14974:40;15002:2;15006:7;14974:27;:40::i;:::-;15025;15057:7;15025:31;:40::i;:::-;14876:196;;:::o;21331:195::-;21397:16;21405:7;21397;:16::i;:::-;21389:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21477:42;21487:13;21477:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21501:17;21510:7;21501:8;:17::i;:::-;21477:9;:42::i;:::-;21455:10;:19;21466:7;21455:19;;;;;;;;;;;:64;;;;;;;;;;;;:::i;:::-;;21331:195;:::o;23019:909:4:-;23094:4;23110:26;23139:77;23110:106;;23226:22;;:::i;:::-;23251:14;:12;:14::i;:::-;23226:39;;23303:2;:12;;;:19;23298:1;23283:5;:12;:16;:39;23275:48;;;;;;23380:27;;:::i;:::-;23410:21;;;;;;;;23426:1;23410:21;;;;23429:1;23410:21;;;23380:51;;23446:6;23455:1;23446:10;;23441:197;23462:5;:12;23458:1;:16;23441:197;;;23514:18;23503:5;23509:1;23503:8;;;;;;;;;;;;;;:29;23495:38;;;;;;23554:73;23571:4;23577:49;23596:2;:12;;;23613:1;23609;:5;23596:19;;;;;;;;;;;;;;23617:5;23623:1;23617:8;;;;;;;;;;;;;;23577:18;:49::i;:::-;23554:16;:73::i;:::-;23547:80;;23476:3;;;;;;;23441:197;;;;23654:39;23671:4;23677:2;:12;;;23690:1;23677:15;;;;;;;;;;;;;;23654:16;:39::i;:::-;23647:46;;23707:186;23742:5;:7;;;23751:5;:7;;;23773:20;23788:4;23773:14;:20::i;:::-;23795:2;:8;;;23818:23;23833:5;:7;;;23818:14;:23::i;:::-;23843:2;:8;;;23866:20;23881:2;:4;;;23866:14;:20::i;:::-;23888:2;:4;;;23707:20;:186::i;:::-;23703:200;;23902:1;23895:8;;;;;;;23703:200;23920:1;23913:8;;;;;23019:909;;;;;:::o;1065:112:5:-;1130:7;1156;:14;;;1149:21;;1065:112;;;:::o;8151:269:0:-;8260:32;8274:4;8280:2;8284:7;8260:13;:32::i;:::-;8310:48;8333:4;8339:2;8343:7;8352:5;8310:22;:48::i;:::-;8302:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8151:269;;;;:::o;10138:448::-;10252:4;10232:24;;:16;10240:7;10232;:16::i;:::-;:24;;;10224:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10334:1;10320:16;;:2;:16;;;;10312:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10388:23;10403:7;10388:14;:23::i;:::-;10422:35;:17;:23;10440:4;10422:23;;;;;;;;;;;;;;;:33;:35::i;:::-;10467:33;:17;:21;10485:2;10467:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10534:2;10511:11;:20;10523:7;10511:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10571:7;10567:2;10552:27;;10561:4;10552:27;;;;;;;;;;;;10138:448;;;:::o;16848:1128::-;17110:22;17135:32;17165:1;17135:12;:18;17148:4;17135:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;17110:57;;17177:18;17198:17;:26;17216:7;17198:26;;;;;;;;;;;;17177:47;;17342:14;17328:10;:28;17324:323;;17372:19;17394:12;:18;17407:4;17394:18;;;;;;;;;;;;;;;17413:14;17394:34;;;;;;;;;;;;;;;;17372:56;;17476:11;17443:12;:18;17456:4;17443:18;;;;;;;;;;;;;;;17462:10;17443:30;;;;;;;;;;;;;;;:44;;;;17592:10;17559:17;:30;17577:11;17559:30;;;;;;;;;;;:43;;;;17324:323;;17733:12;:18;17746:4;17733:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;16848:1128;;;;:::o;15694:183::-;15807:12;:16;15820:2;15807:16;;;;;;;;;;;;;;;:23;;;;15778:17;:26;15796:7;15778:26;;;;;;;;;;;:52;;;;15840:12;:16;15853:2;15840:16;;;;;;;;;;;;;;;15862:7;15840:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;15840:30:0;;;;;;;;;;;;;;;;;;;;;;15694:183;;:::o;9612:327::-;9697:1;9683:16;;:2;:16;;;;9675:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9755:16;9763:7;9755;:16::i;:::-;9754:17;9746:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9838:2;9815:11;:20;9827:7;9815:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;9850:33;:17;:21;9868:2;9850:21;;;;;;;;;;;;;;;:31;:33::i;:::-;9924:7;9920:2;9899:33;;9916:1;9899:33;;;;;;;;;;;;9612:327;;:::o;16072:161::-;16175:10;:17;;;;16148:15;:24;16164:7;16148:24;;;;;;;;;;;:44;;;;16202:10;16218:7;16202:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16202:24:0;;;;;;;;;;;;;;;;;;;;;;16072:161;:::o;43271:465:2:-;43321:27;43370:1;43364:2;:7;43360:48;;;43387:10;;;;;;;;;;;;;;;;;;;;;43360:48;43417:6;43426:2;43417:11;;43438:8;43456:66;43468:1;43463;:6;43456:66;;43485:5;;;;;;;43509:2;43504:7;;;;;;;;;43456:66;;;43531:17;43561:3;43551:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;43551:14:2;;;;43531:34;;43575:6;43590:1;43584:3;:7;43575:16;;43601:100;43614:1;43608:2;:7;43601:100;;43664:2;43659;:7;;;;;;43654:2;:12;43643:25;;43631:4;43636:3;;;;;;;43631:9;;;;;;;;;;;:37;;;;;;;;;;;43688:2;43682:8;;;;;;;;;43601:100;;;43724:4;43710:19;;;;;;43271:465;;;;:::o;39712:166::-;39790:33;39842:29;39852:2;39856;39842:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;39835:36;;39712:166;;;;:::o;21070:1944:4:-;21117:22;;:::i;:::-;21158:169;;;;;;;;21182:66;21158:169;;;;21259:66;21158:169;;;21151:2;:4;;:176;;;;21344:327;;;;;;;;;;;;;;;;21369:66;21344:327;;;;21446:66;21344:327;;;;;;;;;;;;;;;21525:66;21344:327;;;;21602:66;21344:327;;;;;;21337:2;:4;;:334;;;;21692:327;;;;;;;;;;;;;;;;21717:66;21692:327;;;;21794:66;21692:327;;;;;;;;;;;;;;;21873:66;21692:327;;;;21950:66;21692:327;;;;;;21681:2;:8;;:338;;;;22040:327;;;;;;;;;;;;;;;;22065:66;22040:327;;;;22142:66;22040:327;;;;;;;;;;;;;;;22221:66;22040:327;;;;22298:66;22040:327;;;;;;22029:2;:8;;:338;;;;22414:1;22392:24;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;22377:2;:12;;:39;;;;22444:169;;;;;;;;22468:66;22444:169;;;;22545:66;22444:169;;;22426:2;:12;;;22439:1;22426:15;;;;;;;;;;;;;:187;;;;22641:169;;;;;;;;22665:66;22641:169;;;;22742:66;22641:169;;;22623:2;:12;;;22636:1;22623:15;;;;;;;;;;;;;:187;;;;22838:169;;;;;;;;22862:66;22838:169;;;;22939:66;22838:169;;;22820:2;:12;;;22833:1;22820:15;;;;;;;;;;;;;:187;;;;21070:1944;:::o;17613:444::-;17677:16;;:::i;:::-;17705:20;;:::i;:::-;17746:1;:3;;;17735:5;17741:1;17735:8;;;;;;;;;;:14;;;;;17770:1;:3;;;17759:5;17765:1;17759:8;;;;;;;;;;:14;;;;;17794:1;17783:5;17789:1;17783:8;;;;;;;;;;:12;;;;;17805;17904:4;17901:1;17895:4;17888:5;17885:1;17882;17875:4;17870:3;17866:14;17861:48;17850:59;;17986:7;17999:1;17994:20;;;;17979:35;;17994:20;18003:9;17979:35;;18042:7;18033:17;;;;;;17613:444;;;;;;:::o;16701:483::-;16775:16;;:::i;:::-;16803:20;;:::i;:::-;16844:2;:4;;;16833:5;16839:1;16833:8;;;;;;;;;;:15;;;;;16869:2;:4;;;16858:5;16864:1;16858:8;;;;;;;;;;:15;;;;;16894:2;:4;;;16883:5;16889:1;16883:8;;;;;;;;;;:15;;;;;16919:2;:4;;;16908:5;16914:1;16908:8;;;;;;;;;;:15;;;;;16933:12;17032:4;17029:1;17023:4;17016:5;17013:1;17010;17003:4;16998:3;16994:14;16989:48;16978:59;;17114:7;17127:1;17122:20;;;;17107:35;;17122:20;17131:9;17107:35;;17169:7;17161:16;;;;;;16701:483;;;;;;:::o;16312:340::-;16369:14;;:::i;:::-;16447:6;16456:77;16447:86;;16554:1;16547;:3;;;:8;:20;;;;;16566:1;16559;:3;;;:8;16547:20;16543:58;;;16588:13;;;;;;;;16596:1;16588:13;;;;16599:1;16588:13;;;16581:20;;;;;16543:58;16618:27;;;;;;;;16626:1;:3;;;16618:27;;;;16642:1;16636;:3;;;:7;;;;;;16631:1;:13;16618:27;;;16611:34;;;16312:340;;;;:::o;20179:547::-;20425:4;20441:19;20477:1;20463:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20441:38;;20489:19;20525:1;20511:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20489:38;;20545:2;20537;20540:1;20537:5;;;;;;;;;;;;;:10;;;;20565:2;20557;20560:1;20557:5;;;;;;;;;;;;;:10;;;;20585:2;20577;20580:1;20577:5;;;;;;;;;;;;;:10;;;;20605:2;20597;20600:1;20597:5;;;;;;;;;;;;;:10;;;;20625:2;20617;20620:1;20617:5;;;;;;;;;;;;;:10;;;;20645:2;20637;20640:1;20637:5;;;;;;;;;;;;;:10;;;;20665:2;20657;20660:1;20657:5;;;;;;;;;;;;;:10;;;;20685:2;20677;20680:1;20677:5;;;;;;;;;;;;;:10;;;;20704:15;20712:2;20716;20704:7;:15::i;:::-;20697:22;;;;20179:547;;;;;;;;;;:::o;11114:347:0:-;11235:4;11260:15;:2;:13;;;:15::i;:::-;11255:58;;11298:4;11291:11;;;;11255:58;11323:13;11355:2;11339:36;;;11376:10;11388:4;11394:7;11403:5;11339:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11339:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11339:70:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11339:70:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11339:70:0;;;;;;;;;;;;;;;;11323:86;;4125:10;11437:16;;11427:26;;;:6;:26;;;;11419:35;;;11114:347;;;;;;;:::o;11542:171::-;11641:1;11605:38;;:15;:24;11621:7;11605:24;;;;;;;;;;;;;;;;;;;;;:38;;;11601:106;;11694:1;11659:15;:24;11675:7;11659:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;11601:106;11542:171;:::o;1278:108:5:-;1358:21;1377:1;1358:7;:14;;;:18;;:21;;;;:::i;:::-;1341:7;:14;;:38;;;;1278:108;:::o;1183:89::-;1264:1;1246:7;:14;;;:19;;;;;;;;;;;1183:89;:::o;1274:134:6:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;40282:1020:2:-;40414:33;40459:16;40484:2;40459:28;;40497:16;40522:2;40497:28;;40535:16;40560:2;40535:28;;40573:16;40598:2;40573:28;;40611:16;40636:2;40611:28;;40649:19;40734:3;:10;40721:3;:10;40708:3;:10;40695:3;:10;40682:3;:10;:23;:36;:49;:62;40671:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;40671:74:2;;;;40649:96;;40755:19;40783:5;40755:34;;40799:6;40808:1;40799:10;;40819:6;40828:1;40819:10;;40848:1;40844:5;;40839:78;40855:3;:10;40851:1;:14;40839:78;;;40900:3;40904:1;40900:6;;;;;;;;;;;;;;;;40886;40893:3;;;;;;40886:11;;;;;;;;;;;:20;;;;;;;;;;;40867:3;;;;;;;40839:78;;;40935:1;40931:5;;40926:78;40942:3;:10;40938:1;:14;40926:78;;;40987:3;40991:1;40987:6;;;;;;;;;;;;;;;;40973;40980:3;;;;;;40973:11;;;;;;;;;;;:20;;;;;;;;;;;40954:3;;;;;;;40926:78;;;41022:1;41018:5;;41013:78;41029:3;:10;41025:1;:14;41013:78;;;41074:3;41078:1;41074:6;;;;;;;;;;;;;;;;41060;41067:3;;;;;;41060:11;;;;;;;;;;;:20;;;;;;;;;;;41041:3;;;;;;;41013:78;;;41109:1;41105:5;;41100:78;41116:3;:10;41112:1;:14;41100:78;;;41161:3;41165:1;41161:6;;;;;;;;;;;;;;;;41147;41154:3;;;;;;41147:11;;;;;;;;;;;:20;;;;;;;;;;;41128:3;;;;;;;41100:78;;;41196:1;41192:5;;41187:78;41203:3;:10;41199:1;:14;41187:78;;;41248:3;41252:1;41248:6;;;;;;;;;;;;;;;;41234;41241:3;;;;;;41234:11;;;;;;;;;;;:20;;;;;;;;;;;41215:3;;;;;;;41187:78;;;41288:6;41274:21;;;;;;;;;;;40282:1020;;;;;;;:::o;18268:913:4:-;18345:4;18382:2;:9;18369:2;:9;:22;18361:31;;;;;;18402:13;18418:2;:9;18402:25;;18437:14;18465:1;18454:8;:12;18437:29;;18476:19;18509:9;18498:21;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;18498:21:4;;;;18476:43;;18534:6;18543:1;18534:10;;18529:307;18550:8;18546:1;:12;18529:307;;;18606:2;18609:1;18606:5;;;;;;;;;;;;;;:7;;;18587:5;18601:1;18597;18593;:5;:9;18587:16;;;;;;;;;;;;;:26;;;;;18646:2;18649:1;18646:5;;;;;;;;;;;;;;:7;;;18627:5;18641:1;18637;18633;:5;:9;18627:16;;;;;;;;;;;;;:26;;;;;18686:2;18689:1;18686:5;;;;;;;;;;;;;;:7;;;18694:1;18686:10;;;;;;;;;;;18667:5;18681:1;18677;18673;:5;:9;18667:16;;;;;;;;;;;;;:29;;;;;18729:2;18732:1;18729:5;;;;;;;;;;;;;;:7;;;18737:1;18729:10;;;;;;;;;;;18710:5;18724:1;18720;18716;:5;:9;18710:16;;;;;;;;;;;;;:29;;;;;18772:2;18775:1;18772:5;;;;;;;;;;;;;;:7;;;18780:1;18772:10;;;;;;;;;;;18753:5;18767:1;18763;18759;:5;:9;18753:16;;;;;;;;;;;;;:29;;;;;18815:2;18818:1;18815:5;;;;;;;;;;;;;;:7;;;18823:1;18815:10;;;;;;;;;;;18796:5;18810:1;18806;18802;:5;:9;18796:16;;;;;;;;;;;;;:29;;;;;18560:3;;;;;;;18529:307;;;;18845:18;;:::i;:::-;18873:12;19001:4;18996:3;18989:4;18978:9;18974:20;18967:4;18960:5;18956:16;18953:1;18950;18943:4;18938:3;18934:14;18929:77;18918:88;;19083:7;19096:1;19091:20;;;;19076:35;;19091:20;19100:9;19076:35;;19138:7;19130:16;;;;;;19173:1;19163:3;19167:1;19163:6;;;;;;;;;;;:11;;19156:18;;;;;;;18268:913;;;;:::o;557:797:8:-;617:4;1062:16;1088:19;1110:66;1088:88;;;;1277:7;1265:20;1253:32;;1316:3;1304:15;;:8;:15;;:42;;;;;1335:11;1323:8;:23;;1304:42;1296:51;;;;557:797;;;:::o;1732:187:6:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;301:2072:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;301:2072:3;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;301:2072:3;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;301:2072:3;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;301:2072:3;;;;:::o",
  "source": "pragma solidity >=0.4.21 <0.6.0;\n\nimport './ERC721Mintable.sol';\nimport './verifier.sol';\n\n// TODO define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>\n// TODO define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\n\ncontract SolnSquareVerifier is ERC721TokenComplete, Verifier {\n\n    // TODO define a solutions struct that can hold an index & an address\n    struct Solution {\n        bytes32 hashIndex;\n        address senderAddress;\n        bool isMinted;\n    }\n\n// TODO define an array of the above struct\n    Solution[] solutionsArr;\n\n// TODO define a mapping to store unique solutions submitted\n    mapping (address => Solution) solutions;\n\n// TODO Create an event to emit when a solution is added\n    event SolutionAdded(bytes32 index, address senderAddress);\n\n// TODO Create a function to add the solutions to the array and emit the event\n    function addSolution(uint[2] memory a, uint[2][2] memory b,\n                         uint[2] memory c, uint[2] memory inputs)\n                public\n    {\n        bool isValid = verifyTx(a,b,c,inputs);\n        require(isValid, 'The solution is not valid');\n\n        bytes32 solutionHash = keccak256(abi.encodePacked(a,b,c,inputs));\n\n        Solution memory solution = Solution({\n            hashIndex : solutionHash,\n            senderAddress : msg.sender,\n            isMinted : false\n        });\n\n        solutions[msg.sender] = solution;\n        solutionsArr.push(solution);\n        emit SolutionAdded (solutionHash, msg.sender);\n    }\n\n// TODO Create a function to mint new NFT only after the solution has been verified\n\n    function mint(address to, uint tokenId)\n        public\n        returns(bool)\n    {\n        //  - make sure the solution is unique (has not been used before)\n        Solution memory solution = solutions[to];\n        require(!solution.isMinted, 'this solution is used before');\n\n        _mint(to, tokenId);\n        solutions[to].isMinted = true;\n\n        //  - make surehandle metadata as well as tokenSuplly\n        _setTokenURI(tokenId);\n        return true;\n    }\n\n    constructor(string memory name, string memory symbol)\n    ERC721TokenComplete(name, symbol) public {}\n\n    function getArrLength() external returns(uint8){\n       \n        uint8 len = uint8(solutionsArr.length);\n        return len;\n    }\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
  "sourcePath": "C:/Users/livel/Dropbox/coding/udacity/blockchain/realEstate/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "/C/Users/livel/Dropbox/coding/udacity/blockchain/realEstate/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7677
      ]
    },
    "id": 7678,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7506,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "absolutePath": "/C/Users/livel/Dropbox/coding/udacity/blockchain/realEstate/Blockchain-Capstone/eth-contracts/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7507,
        "nodeType": "ImportDirective",
        "scope": 7678,
        "sourceUnit": 1180,
        "src": "34:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/livel/Dropbox/coding/udacity/blockchain/realEstate/Blockchain-Capstone/eth-contracts/contracts/verifier.sol",
        "file": "./verifier.sol",
        "id": 7508,
        "nodeType": "ImportDirective",
        "scope": 7678,
        "sourceUnit": 10236,
        "src": "65:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7509,
              "name": "ERC721TokenComplete",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1179,
              "src": "332:19:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721TokenComplete_$1179",
                "typeString": "contract ERC721TokenComplete"
              }
            },
            "id": 7510,
            "nodeType": "InheritanceSpecifier",
            "src": "332:19:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7511,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10235,
              "src": "353:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$10235",
                "typeString": "contract Verifier"
              }
            },
            "id": 7512,
            "nodeType": "InheritanceSpecifier",
            "src": "353:8:3"
          }
        ],
        "contractDependencies": [
          77,
          1019,
          1140,
          1179,
          168,
          721,
          122,
          7504,
          10235
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7677,
        "linearizedBaseContracts": [
          7677,
          10235,
          1179,
          1140,
          7504,
          1019,
          721,
          168,
          122,
          77
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7519,
            "members": [
              {
                "constant": false,
                "id": 7514,
                "name": "hashIndex",
                "nodeType": "VariableDeclaration",
                "scope": 7519,
                "src": "469:17:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 7513,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "469:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7516,
                "name": "senderAddress",
                "nodeType": "VariableDeclaration",
                "scope": 7519,
                "src": "496:21:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7515,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "496:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7518,
                "name": "isMinted",
                "nodeType": "VariableDeclaration",
                "scope": 7519,
                "src": "527:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 7517,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "527:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7677,
            "src": "443:104:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7522,
            "name": "solutionsArr",
            "nodeType": "VariableDeclaration",
            "scope": 7677,
            "src": "597:23:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Solution_$7519_storage_$dyn_storage",
              "typeString": "struct SolnSquareVerifier.Solution[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 7520,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7519,
                "src": "597:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7519_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              },
              "id": 7521,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "597:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Solution_$7519_storage_$dyn_storage_ptr",
                "typeString": "struct SolnSquareVerifier.Solution[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7526,
            "name": "solutions",
            "nodeType": "VariableDeclaration",
            "scope": 7677,
            "src": "688:39:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7519_storage_$",
              "typeString": "mapping(address => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7525,
              "keyType": {
                "id": 7523,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "697:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "688:29:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7519_storage_$",
                "typeString": "mapping(address => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7524,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7519,
                "src": "708:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7519_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7532,
            "name": "SolutionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7528,
                  "indexed": false,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7532,
                  "src": "811:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7527,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "811:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7530,
                  "indexed": false,
                  "name": "senderAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7532,
                  "src": "826:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7529,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "826:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "810:38:3"
            },
            "src": "791:58:3"
          },
          {
            "body": {
              "id": 7607,
              "nodeType": "Block",
              "src": "1087:485:3",
              "statements": [
                {
                  "assignments": [
                    7554
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7554,
                      "name": "isValid",
                      "nodeType": "VariableDeclaration",
                      "scope": 7607,
                      "src": "1097:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 7553,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1097:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7561,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7556,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7536,
                        "src": "1121:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7557,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7542,
                        "src": "1123:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                          "typeString": "uint256[2] memory[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7558,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7546,
                        "src": "1125:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7559,
                        "name": "inputs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7550,
                        "src": "1127:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                          "typeString": "uint256[2] memory[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      ],
                      "id": 7555,
                      "name": "verifyTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10234,
                      "src": "1112:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[2] memory) returns (bool)"
                      }
                    },
                    "id": 7560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1112:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1097:37:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7563,
                        "name": "isValid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7554,
                        "src": "1152:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54686520736f6c7574696f6e206973206e6f742076616c6964",
                        "id": 7564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1161:27:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8365fbd9e7addc86f4c8800b4b164c39ce460752c1f9a1905c1cf2197eab07e5",
                          "typeString": "literal_string \"The solution is not valid\""
                        },
                        "value": "The solution is not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8365fbd9e7addc86f4c8800b4b164c39ce460752c1f9a1905c1cf2197eab07e5",
                          "typeString": "literal_string \"The solution is not valid\""
                        }
                      ],
                      "id": 7562,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10580,
                        10581
                      ],
                      "referencedDeclaration": 10581,
                      "src": "1144:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1144:45:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7566,
                  "nodeType": "ExpressionStatement",
                  "src": "1144:45:3"
                },
                {
                  "assignments": [
                    7568
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7568,
                      "name": "solutionHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 7607,
                      "src": "1200:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7567,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1200:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7578,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7572,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7536,
                            "src": "1250:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7573,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7542,
                            "src": "1252:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7574,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7546,
                            "src": "1254:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7575,
                            "name": "inputs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7550,
                            "src": "1256:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7570,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10564,
                            "src": "1233:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1233:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1233:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7569,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10571,
                      "src": "1223:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1223:41:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1200:64:3"
                },
                {
                  "assignments": [
                    7580
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7580,
                      "name": "solution",
                      "nodeType": "VariableDeclaration",
                      "scope": 7607,
                      "src": "1275:24:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7519_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 7579,
                        "name": "Solution",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 7519,
                        "src": "1275:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7519_storage_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7587,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7582,
                        "name": "solutionHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7568,
                        "src": "1337:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7583,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10577,
                          "src": "1379:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1379:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 7585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1414:5:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7581,
                      "name": "Solution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7519,
                      "src": "1302:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Solution_$7519_storage_ptr_$",
                        "typeString": "type(struct SolnSquareVerifier.Solution storage pointer)"
                      }
                    },
                    "id": 7586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "hashIndex",
                      "senderAddress",
                      "isMinted"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1302:128:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7519_memory",
                      "typeString": "struct SolnSquareVerifier.Solution memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1275:155:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7588,
                        "name": "solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7526,
                        "src": "1441:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7519_storage_$",
                          "typeString": "mapping(address => struct SolnSquareVerifier.Solution storage ref)"
                        }
                      },
                      "id": 7591,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7589,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10577,
                          "src": "1451:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1451:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1441:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7519_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7592,
                      "name": "solution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7580,
                      "src": "1465:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7519_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution memory"
                      }
                    },
                    "src": "1441:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7519_storage",
                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                    }
                  },
                  "id": 7594,
                  "nodeType": "ExpressionStatement",
                  "src": "1441:32:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7598,
                        "name": "solution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7580,
                        "src": "1501:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7519_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Solution_$7519_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7595,
                        "name": "solutionsArr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7522,
                        "src": "1483:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Solution_$7519_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                        }
                      },
                      "id": 7597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1483:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Solution_$7519_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct SolnSquareVerifier.Solution storage ref) returns (uint256)"
                      }
                    },
                    "id": 7599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1483:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7600,
                  "nodeType": "ExpressionStatement",
                  "src": "1483:27:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7602,
                        "name": "solutionHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7568,
                        "src": "1540:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7603,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10577,
                          "src": "1554:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1554:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 7601,
                      "name": "SolutionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7532,
                      "src": "1525:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 7605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1525:40:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7606,
                  "nodeType": "EmitStatement",
                  "src": "1520:45:3"
                }
              ]
            },
            "documentation": null,
            "id": 7608,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7536,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 7608,
                  "src": "955:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7533,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "955:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7535,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7534,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "960:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "955:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7542,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 7608,
                  "src": "973:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                    "typeString": "uint256[2][2]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 7537,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "973:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 7539,
                      "length": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 7538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "978:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "973:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                        "typeString": "uint256[2]"
                      }
                    },
                    "id": 7541,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "981:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "973:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr",
                      "typeString": "uint256[2][2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7546,
                  "name": "c",
                  "nodeType": "VariableDeclaration",
                  "scope": 7608,
                  "src": "1019:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7543,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1019:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7545,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7544,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1024:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1019:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7550,
                  "name": "inputs",
                  "nodeType": "VariableDeclaration",
                  "scope": 7608,
                  "src": "1037:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7547,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1037:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7549,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7548,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1042:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1037:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "954:105:3"
            },
            "returnParameters": {
              "id": 7552,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1087:0:3"
            },
            "scope": 7677,
            "src": "934:638:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7648,
              "nodeType": "Block",
              "src": "1744:383:3",
              "statements": [
                {
                  "assignments": [
                    7618
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7618,
                      "name": "solution",
                      "nodeType": "VariableDeclaration",
                      "scope": 7648,
                      "src": "1828:24:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7519_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 7617,
                        "name": "Solution",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 7519,
                        "src": "1828:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7519_storage_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7622,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 7619,
                      "name": "solutions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7526,
                      "src": "1855:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7519_storage_$",
                        "typeString": "mapping(address => struct SolnSquareVerifier.Solution storage ref)"
                      }
                    },
                    "id": 7621,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 7620,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7610,
                      "src": "1865:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1855:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7519_storage",
                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1828:40:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1886:18:3",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 7624,
                            "name": "solution",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7618,
                            "src": "1887:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7519_memory_ptr",
                              "typeString": "struct SolnSquareVerifier.Solution memory"
                            }
                          },
                          "id": 7625,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isMinted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7518,
                          "src": "1887:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7468697320736f6c7574696f6e2069732075736564206265666f7265",
                        "id": 7627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1906:30:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3320c856a6cfe32aeea081e645d516130e80742b973a7e0b9f0d728809ec4041",
                          "typeString": "literal_string \"this solution is used before\""
                        },
                        "value": "this solution is used before"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3320c856a6cfe32aeea081e645d516130e80742b973a7e0b9f0d728809ec4041",
                          "typeString": "literal_string \"this solution is used before\""
                        }
                      ],
                      "id": 7623,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10580,
                        10581
                      ],
                      "referencedDeclaration": 10581,
                      "src": "1878:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1878:59:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7629,
                  "nodeType": "ExpressionStatement",
                  "src": "1878:59:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7631,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7610,
                        "src": "1954:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7632,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7612,
                        "src": "1958:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7630,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        856
                      ],
                      "referencedDeclaration": 856,
                      "src": "1948:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1948:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7634,
                  "nodeType": "ExpressionStatement",
                  "src": "1948:18:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 7635,
                          "name": "solutions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7526,
                          "src": "1976:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7519_storage_$",
                            "typeString": "mapping(address => struct SolnSquareVerifier.Solution storage ref)"
                          }
                        },
                        "id": 7637,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 7636,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7610,
                          "src": "1986:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1976:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7519_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref"
                        }
                      },
                      "id": 7638,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isMinted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7518,
                      "src": "1976:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 7639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2001:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1976:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7641,
                  "nodeType": "ExpressionStatement",
                  "src": "1976:29:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7643,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7612,
                        "src": "2091:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7642,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1139,
                      "src": "2078:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 7644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2078:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7645,
                  "nodeType": "ExpressionStatement",
                  "src": "2078:21:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 7646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2116:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7616,
                  "id": 7647,
                  "nodeType": "Return",
                  "src": "2109:11:3"
                }
              ]
            },
            "documentation": null,
            "id": 7649,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7613,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7610,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7649,
                  "src": "1677:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7609,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1677:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7612,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7649,
                  "src": "1689:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7611,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1689:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1676:26:3"
            },
            "returnParameters": {
              "id": 7616,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7615,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7649,
                  "src": "1734:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7614,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1734:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1733:6:3"
            },
            "scope": 7677,
            "src": "1663:464:3",
            "stateMutability": "nonpayable",
            "superFunction": 1178,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7660,
              "nodeType": "Block",
              "src": "2232:2:3",
              "statements": []
            },
            "documentation": null,
            "id": 7661,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 7656,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7651,
                    "src": "2211:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 7657,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7653,
                    "src": "2217:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 7658,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7655,
                  "name": "ERC721TokenComplete",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1179,
                  "src": "2191:19:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721TokenComplete_$1179_$",
                    "typeString": "type(contract ERC721TokenComplete)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2191:33:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7651,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 7661,
                  "src": "2145:18:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7650,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2145:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7653,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 7661,
                  "src": "2165:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7652,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2165:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2144:42:3"
            },
            "returnParameters": {
              "id": 7659,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2232:0:3"
            },
            "scope": 7677,
            "src": "2133:101:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7675,
              "nodeType": "Block",
              "src": "2287:83:3",
              "statements": [
                {
                  "assignments": [
                    7667
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7667,
                      "name": "len",
                      "nodeType": "VariableDeclaration",
                      "scope": 7675,
                      "src": "2305:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 7666,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2305:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7672,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7669,
                          "name": "solutionsArr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7522,
                          "src": "2323:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Solution_$7519_storage_$dyn_storage",
                            "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                          }
                        },
                        "id": 7670,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2323:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7668,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2317:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": "uint8"
                    },
                    "id": 7671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2317:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2305:38:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7673,
                    "name": "len",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7667,
                    "src": "2360:3:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 7665,
                  "id": 7674,
                  "nodeType": "Return",
                  "src": "2353:10:3"
                }
              ]
            },
            "documentation": null,
            "id": 7676,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getArrLength",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7662,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2261:2:3"
            },
            "returnParameters": {
              "id": 7665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7664,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7676,
                  "src": "2281:5:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 7663,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2281:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2280:7:3"
            },
            "scope": 7677,
            "src": "2240:130:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 7678,
        "src": "301:2072:3"
      }
    ],
    "src": "0:2400:3"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/livel/Dropbox/coding/udacity/blockchain/realEstate/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7677
      ]
    },
    "id": 7678,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7506,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "absolutePath": "/C/Users/livel/Dropbox/coding/udacity/blockchain/realEstate/Blockchain-Capstone/eth-contracts/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7507,
        "nodeType": "ImportDirective",
        "scope": 7678,
        "sourceUnit": 1180,
        "src": "34:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/livel/Dropbox/coding/udacity/blockchain/realEstate/Blockchain-Capstone/eth-contracts/contracts/verifier.sol",
        "file": "./verifier.sol",
        "id": 7508,
        "nodeType": "ImportDirective",
        "scope": 7678,
        "sourceUnit": 10236,
        "src": "65:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7509,
              "name": "ERC721TokenComplete",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1179,
              "src": "332:19:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721TokenComplete_$1179",
                "typeString": "contract ERC721TokenComplete"
              }
            },
            "id": 7510,
            "nodeType": "InheritanceSpecifier",
            "src": "332:19:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7511,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10235,
              "src": "353:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$10235",
                "typeString": "contract Verifier"
              }
            },
            "id": 7512,
            "nodeType": "InheritanceSpecifier",
            "src": "353:8:3"
          }
        ],
        "contractDependencies": [
          77,
          1019,
          1140,
          1179,
          168,
          721,
          122,
          7504,
          10235
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7677,
        "linearizedBaseContracts": [
          7677,
          10235,
          1179,
          1140,
          7504,
          1019,
          721,
          168,
          122,
          77
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7519,
            "members": [
              {
                "constant": false,
                "id": 7514,
                "name": "hashIndex",
                "nodeType": "VariableDeclaration",
                "scope": 7519,
                "src": "469:17:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 7513,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "469:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7516,
                "name": "senderAddress",
                "nodeType": "VariableDeclaration",
                "scope": 7519,
                "src": "496:21:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7515,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "496:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7518,
                "name": "isMinted",
                "nodeType": "VariableDeclaration",
                "scope": 7519,
                "src": "527:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 7517,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "527:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7677,
            "src": "443:104:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7522,
            "name": "solutionsArr",
            "nodeType": "VariableDeclaration",
            "scope": 7677,
            "src": "597:23:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Solution_$7519_storage_$dyn_storage",
              "typeString": "struct SolnSquareVerifier.Solution[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 7520,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7519,
                "src": "597:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7519_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              },
              "id": 7521,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "597:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Solution_$7519_storage_$dyn_storage_ptr",
                "typeString": "struct SolnSquareVerifier.Solution[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7526,
            "name": "solutions",
            "nodeType": "VariableDeclaration",
            "scope": 7677,
            "src": "688:39:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7519_storage_$",
              "typeString": "mapping(address => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7525,
              "keyType": {
                "id": 7523,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "697:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "688:29:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7519_storage_$",
                "typeString": "mapping(address => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7524,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7519,
                "src": "708:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7519_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7532,
            "name": "SolutionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7528,
                  "indexed": false,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7532,
                  "src": "811:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7527,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "811:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7530,
                  "indexed": false,
                  "name": "senderAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7532,
                  "src": "826:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7529,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "826:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "810:38:3"
            },
            "src": "791:58:3"
          },
          {
            "body": {
              "id": 7607,
              "nodeType": "Block",
              "src": "1087:485:3",
              "statements": [
                {
                  "assignments": [
                    7554
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7554,
                      "name": "isValid",
                      "nodeType": "VariableDeclaration",
                      "scope": 7607,
                      "src": "1097:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 7553,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1097:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7561,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7556,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7536,
                        "src": "1121:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7557,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7542,
                        "src": "1123:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                          "typeString": "uint256[2] memory[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7558,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7546,
                        "src": "1125:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7559,
                        "name": "inputs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7550,
                        "src": "1127:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                          "typeString": "uint256[2] memory[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      ],
                      "id": 7555,
                      "name": "verifyTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10234,
                      "src": "1112:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[2] memory) returns (bool)"
                      }
                    },
                    "id": 7560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1112:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1097:37:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7563,
                        "name": "isValid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7554,
                        "src": "1152:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54686520736f6c7574696f6e206973206e6f742076616c6964",
                        "id": 7564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1161:27:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8365fbd9e7addc86f4c8800b4b164c39ce460752c1f9a1905c1cf2197eab07e5",
                          "typeString": "literal_string \"The solution is not valid\""
                        },
                        "value": "The solution is not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8365fbd9e7addc86f4c8800b4b164c39ce460752c1f9a1905c1cf2197eab07e5",
                          "typeString": "literal_string \"The solution is not valid\""
                        }
                      ],
                      "id": 7562,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10580,
                        10581
                      ],
                      "referencedDeclaration": 10581,
                      "src": "1144:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1144:45:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7566,
                  "nodeType": "ExpressionStatement",
                  "src": "1144:45:3"
                },
                {
                  "assignments": [
                    7568
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7568,
                      "name": "solutionHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 7607,
                      "src": "1200:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7567,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1200:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7578,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7572,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7536,
                            "src": "1250:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7573,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7542,
                            "src": "1252:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7574,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7546,
                            "src": "1254:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7575,
                            "name": "inputs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7550,
                            "src": "1256:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7570,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10564,
                            "src": "1233:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1233:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1233:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7569,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10571,
                      "src": "1223:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1223:41:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1200:64:3"
                },
                {
                  "assignments": [
                    7580
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7580,
                      "name": "solution",
                      "nodeType": "VariableDeclaration",
                      "scope": 7607,
                      "src": "1275:24:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7519_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 7579,
                        "name": "Solution",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 7519,
                        "src": "1275:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7519_storage_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7587,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7582,
                        "name": "solutionHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7568,
                        "src": "1337:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7583,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10577,
                          "src": "1379:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1379:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 7585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1414:5:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7581,
                      "name": "Solution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7519,
                      "src": "1302:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Solution_$7519_storage_ptr_$",
                        "typeString": "type(struct SolnSquareVerifier.Solution storage pointer)"
                      }
                    },
                    "id": 7586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "hashIndex",
                      "senderAddress",
                      "isMinted"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1302:128:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7519_memory",
                      "typeString": "struct SolnSquareVerifier.Solution memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1275:155:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7588,
                        "name": "solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7526,
                        "src": "1441:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7519_storage_$",
                          "typeString": "mapping(address => struct SolnSquareVerifier.Solution storage ref)"
                        }
                      },
                      "id": 7591,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7589,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10577,
                          "src": "1451:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1451:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1441:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7519_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7592,
                      "name": "solution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7580,
                      "src": "1465:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7519_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution memory"
                      }
                    },
                    "src": "1441:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7519_storage",
                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                    }
                  },
                  "id": 7594,
                  "nodeType": "ExpressionStatement",
                  "src": "1441:32:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7598,
                        "name": "solution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7580,
                        "src": "1501:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7519_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Solution_$7519_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7595,
                        "name": "solutionsArr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7522,
                        "src": "1483:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Solution_$7519_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                        }
                      },
                      "id": 7597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1483:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Solution_$7519_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct SolnSquareVerifier.Solution storage ref) returns (uint256)"
                      }
                    },
                    "id": 7599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1483:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7600,
                  "nodeType": "ExpressionStatement",
                  "src": "1483:27:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7602,
                        "name": "solutionHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7568,
                        "src": "1540:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7603,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10577,
                          "src": "1554:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1554:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 7601,
                      "name": "SolutionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7532,
                      "src": "1525:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 7605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1525:40:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7606,
                  "nodeType": "EmitStatement",
                  "src": "1520:45:3"
                }
              ]
            },
            "documentation": null,
            "id": 7608,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7536,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 7608,
                  "src": "955:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7533,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "955:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7535,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7534,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "960:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "955:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7542,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 7608,
                  "src": "973:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                    "typeString": "uint256[2][2]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 7537,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "973:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 7539,
                      "length": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 7538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "978:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "973:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                        "typeString": "uint256[2]"
                      }
                    },
                    "id": 7541,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "981:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "973:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr",
                      "typeString": "uint256[2][2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7546,
                  "name": "c",
                  "nodeType": "VariableDeclaration",
                  "scope": 7608,
                  "src": "1019:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7543,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1019:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7545,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7544,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1024:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1019:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7550,
                  "name": "inputs",
                  "nodeType": "VariableDeclaration",
                  "scope": 7608,
                  "src": "1037:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7547,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1037:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7549,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7548,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1042:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1037:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "954:105:3"
            },
            "returnParameters": {
              "id": 7552,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1087:0:3"
            },
            "scope": 7677,
            "src": "934:638:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7648,
              "nodeType": "Block",
              "src": "1744:383:3",
              "statements": [
                {
                  "assignments": [
                    7618
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7618,
                      "name": "solution",
                      "nodeType": "VariableDeclaration",
                      "scope": 7648,
                      "src": "1828:24:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7519_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 7617,
                        "name": "Solution",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 7519,
                        "src": "1828:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7519_storage_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7622,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 7619,
                      "name": "solutions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7526,
                      "src": "1855:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7519_storage_$",
                        "typeString": "mapping(address => struct SolnSquareVerifier.Solution storage ref)"
                      }
                    },
                    "id": 7621,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 7620,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7610,
                      "src": "1865:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1855:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7519_storage",
                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1828:40:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1886:18:3",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 7624,
                            "name": "solution",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7618,
                            "src": "1887:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7519_memory_ptr",
                              "typeString": "struct SolnSquareVerifier.Solution memory"
                            }
                          },
                          "id": 7625,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isMinted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7518,
                          "src": "1887:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7468697320736f6c7574696f6e2069732075736564206265666f7265",
                        "id": 7627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1906:30:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3320c856a6cfe32aeea081e645d516130e80742b973a7e0b9f0d728809ec4041",
                          "typeString": "literal_string \"this solution is used before\""
                        },
                        "value": "this solution is used before"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3320c856a6cfe32aeea081e645d516130e80742b973a7e0b9f0d728809ec4041",
                          "typeString": "literal_string \"this solution is used before\""
                        }
                      ],
                      "id": 7623,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10580,
                        10581
                      ],
                      "referencedDeclaration": 10581,
                      "src": "1878:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1878:59:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7629,
                  "nodeType": "ExpressionStatement",
                  "src": "1878:59:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7631,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7610,
                        "src": "1954:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7632,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7612,
                        "src": "1958:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7630,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        856
                      ],
                      "referencedDeclaration": 856,
                      "src": "1948:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1948:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7634,
                  "nodeType": "ExpressionStatement",
                  "src": "1948:18:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 7635,
                          "name": "solutions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7526,
                          "src": "1976:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7519_storage_$",
                            "typeString": "mapping(address => struct SolnSquareVerifier.Solution storage ref)"
                          }
                        },
                        "id": 7637,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 7636,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7610,
                          "src": "1986:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1976:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7519_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref"
                        }
                      },
                      "id": 7638,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isMinted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7518,
                      "src": "1976:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 7639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2001:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1976:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7641,
                  "nodeType": "ExpressionStatement",
                  "src": "1976:29:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7643,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7612,
                        "src": "2091:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7642,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1139,
                      "src": "2078:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 7644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2078:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7645,
                  "nodeType": "ExpressionStatement",
                  "src": "2078:21:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 7646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2116:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7616,
                  "id": 7647,
                  "nodeType": "Return",
                  "src": "2109:11:3"
                }
              ]
            },
            "documentation": null,
            "id": 7649,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7613,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7610,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7649,
                  "src": "1677:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7609,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1677:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7612,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7649,
                  "src": "1689:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7611,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1689:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1676:26:3"
            },
            "returnParameters": {
              "id": 7616,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7615,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7649,
                  "src": "1734:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7614,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1734:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1733:6:3"
            },
            "scope": 7677,
            "src": "1663:464:3",
            "stateMutability": "nonpayable",
            "superFunction": 1178,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7660,
              "nodeType": "Block",
              "src": "2232:2:3",
              "statements": []
            },
            "documentation": null,
            "id": 7661,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 7656,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7651,
                    "src": "2211:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 7657,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7653,
                    "src": "2217:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 7658,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7655,
                  "name": "ERC721TokenComplete",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1179,
                  "src": "2191:19:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721TokenComplete_$1179_$",
                    "typeString": "type(contract ERC721TokenComplete)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2191:33:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7651,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 7661,
                  "src": "2145:18:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7650,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2145:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7653,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 7661,
                  "src": "2165:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7652,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2165:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2144:42:3"
            },
            "returnParameters": {
              "id": 7659,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2232:0:3"
            },
            "scope": 7677,
            "src": "2133:101:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7675,
              "nodeType": "Block",
              "src": "2287:83:3",
              "statements": [
                {
                  "assignments": [
                    7667
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7667,
                      "name": "len",
                      "nodeType": "VariableDeclaration",
                      "scope": 7675,
                      "src": "2305:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 7666,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2305:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7672,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7669,
                          "name": "solutionsArr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7522,
                          "src": "2323:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Solution_$7519_storage_$dyn_storage",
                            "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                          }
                        },
                        "id": 7670,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2323:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7668,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2317:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": "uint8"
                    },
                    "id": 7671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2317:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2305:38:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7673,
                    "name": "len",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7667,
                    "src": "2360:3:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 7665,
                  "id": 7674,
                  "nodeType": "Return",
                  "src": "2353:10:3"
                }
              ]
            },
            "documentation": null,
            "id": 7676,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getArrLength",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7662,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2261:2:3"
            },
            "returnParameters": {
              "id": 7665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7664,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7676,
                  "src": "2281:5:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 7663,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2281:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2280:7:3"
            },
            "scope": 7677,
            "src": "2240:130:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 7678,
        "src": "301:2072:3"
      }
    ],
    "src": "0:2400:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0x01d5f9f5a890e5385b4f1d07d3c8c1f739f82bb433ed461d4551b7af3edc6340": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "index",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "name": "senderAddress",
              "type": "address"
            }
          ],
          "name": "SolutionAdded",
          "type": "event",
          "signature": "0x01d5f9f5a890e5385b4f1d07d3c8c1f739f82bb433ed461d4551b7af3edc6340"
        },
        "0x3f3cfdb26fb5f9f1786ab4f1a1f9cd4c0b5e726cbdfc26e495261731aad44e39": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "s",
              "type": "string"
            }
          ],
          "name": "Verified",
          "type": "event",
          "signature": "0x3f3cfdb26fb5f9f1786ab4f1a1f9cd4c0b5e726cbdfc26e495261731aad44e39"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event",
          "signature": "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31"
        },
        "0x5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "oldOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOnwer",
              "type": "address"
            }
          ],
          "name": "TransferOwnership",
          "type": "event",
          "signature": "0x5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c"
        }
      },
      "links": {},
      "address": "0xbfef154E42AfA895051434f06B0dE91CEdDBd7BF",
      "transactionHash": "0x81692d60eb250ffdcd5d7cc80593269451c2cc2cf80e7f640a5901cecd8535c0"
    },
    "5777": {
      "events": {
        "0x01d5f9f5a890e5385b4f1d07d3c8c1f739f82bb433ed461d4551b7af3edc6340": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "index",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "name": "senderAddress",
              "type": "address"
            }
          ],
          "name": "SolutionAdded",
          "type": "event",
          "signature": "0x01d5f9f5a890e5385b4f1d07d3c8c1f739f82bb433ed461d4551b7af3edc6340"
        },
        "0x3f3cfdb26fb5f9f1786ab4f1a1f9cd4c0b5e726cbdfc26e495261731aad44e39": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "s",
              "type": "string"
            }
          ],
          "name": "Verified",
          "type": "event",
          "signature": "0x3f3cfdb26fb5f9f1786ab4f1a1f9cd4c0b5e726cbdfc26e495261731aad44e39"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event",
          "signature": "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31"
        },
        "0x5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "oldOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOnwer",
              "type": "address"
            }
          ],
          "name": "TransferOwnership",
          "type": "event",
          "signature": "0x5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c"
        }
      },
      "links": {},
      "address": "0x1CBA4c69c3afc8A7196EB8f5844190DC056fd96D",
      "transactionHash": "0x92e56885cdc43362f72d0cbe44ebf27800198e95069387fc4c1a07da916bee83"
    }
  },
  "schemaVersion": "3.0.16",
  "updatedAt": "2019-11-04T10:31:58.225Z",
  "devdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}